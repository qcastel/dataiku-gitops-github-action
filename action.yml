name: "Dataiku GitOps Action"
description: "Run Dataiku GitOps workflow"
inputs:
  python-script:
    description: "Path to the Python script to run"
    required: true
  dataiku_api_token:
    description: "Dataiku API token"
    required: true
  dataiku_instance_a_url:
    description: "URL of the development Dataiku instance"
    required: true
  dataiku_instance_b_url:
    description: "URL of the staging Dataiku instance"
    required: true
  dataiku_project_key:
    description: "Key of the Dataiku project"
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
      shell: bash

    - name: Download and Trust Self-Signed Certificate
      run: |
        echo "Downloading self-signed certificate from ${{ inputs.dataiku_instance_a_url }}"
        curl -k -o self-signed.crt ${{ inputs.dataiku_instance_a_url }}/public/api/packages/dataiku-internal-client.tar.gz
        if [ $? -ne 0 ]; then
          echo "Failed to download self-signed certificate"
          exit 1
        fi
        echo "Downloaded self-signed certificate"
        mkdir -p /usr/local/share/ca-certificates/
        cp self-signed.crt /usr/local/share/ca-certificates/
        update-ca-certificates
        if [ $? -ne 0 ]; then
          echo "Failed to update CA certificates"
          exit 1
        fi
        echo "Updated CA certificates"
      shell: bash

    - name: Configure Python to Trust Self-Signed Certificate
      run: |
        echo "Configuring Python to trust self-signed certificate"
        export REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
        export SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
        echo "REQUESTS_CA_BUNDLE=$REQUESTS_CA_BUNDLE" >> $GITHUB_ENV
        echo "SSL_CERT_FILE=$SSL_CERT_FILE" >> $GITHUB_ENV
      shell: bash

    - name: Install Dataiku Python API
      run: |
        echo "Installing Dataiku Python API from ${{ inputs.dataiku_instance_a_url }}"
        pip install --trusted-host ${{ inputs.dataiku_instance_a_url }} ${{ inputs.dataiku_instance_a_url }}/public/packages/dataiku-internal-client.tar.gz
        if [ $? -ne 0 ]; then
          echo "Failed to install Dataiku Python API"
          exit 1
        fi
        echo "Installed Dataiku Python API"
      shell: bash

    - name: Run Dataiku GitOps Action
      env:
        DATAIKU_API_TOKEN: ${{ inputs.dataiku_api_token }}
        DATAIKU_INSTANCE_A_URL: ${{ inputs.dataiku_instance_a_url }}
        DATAIKU_INSTANCE_B_URL: ${{ inputs.dataiku_instance_b_url }}
        DATAIKU_PROJECT_KEY: ${{ inputs.dataiku_project_key }}
      run: |
        python ${{ github.action_path }}/dataiku_gitops_action.py
      shell: bash
